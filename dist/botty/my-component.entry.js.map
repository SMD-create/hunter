{"file":"my-component.entry.esm.js","mappings":"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","names":[],"sources":["src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":["/* General styling for the host element */\r\n:host {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Helvetica Neue', Arial, sans-serif;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  margin: 0;\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n/* Chat container styling */\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n  max-width: 900px;\r\n  height: 80%;\r\n  max-height: 620px;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n/* Chat header styling */\r\n.chat-header {\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  color: white;\r\n  text-align: center;\r\n  padding: 15px;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Chat messages styling */\r\n.chat-messages {\r\n  flex: 1;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n  background-color: #f9f9f9;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n/* Chat message styling (both AI and user messages) */\r\n.chat-message {\r\n  padding: 15px;\r\n  border-radius: 12px;\r\n  max-width: 80%;\r\n  position: relative;\r\n  font-size: 1em;\r\n  line-height: 1.4;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chat-message.ai {\r\n  background-color: #e1f5fe;\r\n  align-self: flex-start;\r\n  border: 1px solid #b3e5fc;\r\n}\r\n\r\n.chat-message.user {\r\n  background-color: #d1e7dd;\r\n  align-self: flex-end;\r\n  border: 1px solid #a3d5c3;\r\n}\r\n\r\n/* Chat card group container with horizontal scrolling */\r\n.chat-card-group {\r\n  display: flex;\r\n  flex-direction: row; /* Horizontal alignment */\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  gap: 15px; /* Spacing between cards */\r\n  padding: 10px;\r\n  background-color: #ffffff;\r\n  border: 1px solid #ddd;\r\n  min-height: 380px; /* Ensure it doesn't shrink smaller than the card height */\r\n  max-height: 380px; /* Prevent it from expanding beyond the card height */\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Custom scrollbar for horizontal scrolling */\r\n.chat-card-group::-webkit-scrollbar {\r\n  height: 8px;\r\n}\r\n\r\n.chat-card-group::-webkit-scrollbar-thumb {\r\n  background-color: #007bff;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* Styling for individual chat cards */\r\n.chat-card {\r\n  width: 345px; /* Fixed width for product cards */\r\n  height: 350px; /* Fixed height for product cards */\r\n  min-width: 250px; /* Set minimum width */\r\n  min-height: 300px; /* Set minimum height */\r\n  border-radius: 8px;\r\n  background-color: #ffffff;\r\n  border: 1px solid #e0e0e0;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.chat-card:hover {\r\n  transform: translateY(-5px); /* Lift card on hover */\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.chat-card img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 6px;\r\n  margin: 5px 0;\r\n  object-fit: contain;\r\n}\r\n\r\n.chat-card h4 {\r\n  margin: 5px 0;\r\n  font-size: 0.9em;\r\n  font-weight: 600;\r\n  color: #333;\r\n  text-align: center;\r\n}\r\n\r\n.chat-card a {\r\n  margin-top: 5px;\r\n  padding: 6px 12px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border-radius: 6px;\r\n  text-decoration: none;\r\n  font-size: 0.9em;\r\n  font-weight: bold;\r\n}\r\n\r\n.chat-card a:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* Photo search message styling */\r\n.chat-message.photo-search {\r\n  display: flex;\r\n  justify-content: center; /* Center the image horizontally */\r\n  align-items: center;     /* Center the image vertically */\r\n  padding: 10px;\r\n  align-self: flex-end;    /* Align to the user's side */\r\n  \r\n}\r\n\r\n.chat-message.photo-search img {\r\n  width: 80px;       /* Set fixed width to 80px */\r\n  height: 80px;      /* Set fixed height to 80px */\r\n  border-radius: 8px; /* Add rounding if desired */\r\n  object-fit: cover; /* Ensure the image fits the dimensions properly */\r\n}\r\n\r\n\r\n/* Styling for bundle messages */\r\n.chat-bundle {\r\n  background-color: #f9f9f9;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.bundle-header {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n\r\n.bundle-item {\r\n  display: flex;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.bundle-image img {\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.bundle-info {\r\n  flex: 1;\r\n}\r\n\r\n.bundle-info h4 {\r\n  font-size: 16px;\r\n}\r\n\r\n.bundle-total {\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n  text-align: right;\r\n}\r\n\r\n.bundle-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-message.unknown {\r\n  background: #f8f8f8;\r\n  border: 1px solid #ccc;\r\n  padding: 30px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.chat-message.image img {\r\n  max-width: 100%;\r\n  border-radius: 5px;\r\n}\r\n\r\n.chat-card-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin: 10px 0;\r\n}\r\n\r\n\r\n.bundle-header {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.bundle-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.bundle-item-row {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 16px;\r\n  position: relative;\r\n}\r\n\r\n.bundle-item-image {\r\n  width: 60px;\r\n  height: 60px;\r\n  object-fit: contain;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n}\r\n\r\n.bundle-item-details {\r\n  flex: 1;\r\n}\r\n\r\n.bundle-item-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin: 0 0 8px;\r\n}\r\n\r\n.bundle-item-purpose {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin: 0 0 8px;\r\n}\r\n\r\n.bundle-item-price {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.original-price {\r\n  text-decoration: line-through;\r\n  color: #999;\r\n}\r\n\r\n.final-price {\r\n  color: #28a745;\r\n}\r\n\r\n.bundle-item-checkbox {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin: 0;\r\n  cursor: not-allowed;\r\n}\r\n\r\n\r\n.bundle-total {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  margin-top: 16px;\r\n  border-top: 1px solid #e0e0e0;\r\n  padding-top: 8px;\r\n}\r\n","//src/components\r\nimport { Component, JSX, State, h } from \"@stencil/core\";\r\n\r\ninterface ChatMessage {\r\n  type: \"text\" | \"card\" | \"image\" | \"bundle\" | \"photo-search\" | \"unknown\";\r\n  content: any;\r\n  isAIReply?: boolean;\r\n  cards?: Array<BundleCard>;\r\n}\r\n\r\ninterface BundleCard {\r\n  title: {\r\n    type: \"text\";\r\n    text: string;\r\n  };\r\n  purpose: string;\r\n  imageUrl: string;\r\n  variants: Array<{\r\n    title: string;\r\n    price: string;\r\n    originalPrice?: string;\r\n    id: number;\r\n  }>;\r\n}\r\n\r\ninterface Conversation {\r\n  messageType: string;\r\n  photoSearchImage?: string;\r\n  messages: ChatMessage[];\r\n}\r\n\r\n@Component({\r\n  tag: \"my-component\",\r\n  styleUrl: \"my-component.css\",\r\n  shadow: true,\r\n})\r\nexport class MyComponent {\r\n  @State() chatMessages: Conversation[] = [];\r\n  @State() isLoading: boolean = true;\r\n  @State() errorMessage: string | null = null;\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://timmy-io-smd-create-smd-creates-projects.vercel.app/api/conversation\"\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        this.chatMessages = data.chat || [];\r\n      } else {\r\n        this.errorMessage = \"Failed to load chat messages.\";\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = \"Error fetching chat messages.\";\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"chat-container\">\r\n        <div class=\"chat-header\">Timmy AI</div>\r\n        <div class=\"chat-messages\">\r\n          {this.isLoading ? (\r\n            <div class=\"loading\">Loading messages...</div>\r\n          ) : this.errorMessage ? (\r\n            <div class=\"error\">{this.errorMessage}</div>\r\n          ) : (\r\n            this.renderChatMessages()\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderBundleMessages(cards: BundleCard[]) {\r\n    return (\r\n      <div class=\"bundle-container\">\r\n        <h4 class=\"bundle-header\">Here's your bundle!</h4>\r\n        {cards.map((card, index) => (\r\n          <div class=\"bundle-item\" key={`bundle-${index}`}>\r\n            <div class=\"bundle-item-row\">\r\n              <img\r\n                src={card.imageUrl}\r\n                alt={card.title.text || \"Untitled Product\"}\r\n                class=\"bundle-item-image\"\r\n              />\r\n              <div class=\"bundle-item-details\">\r\n                <h5 class=\"bundle-item-title\">{card.title.text}</h5>\r\n                <p class=\"bundle-item-purpose\">{card.purpose}</p>\r\n                <div class=\"bundle-item-price\">\r\n                  {card.variants[0]?.originalPrice && (\r\n                    <span class=\"original-price\">\r\n                      ₹ {parseFloat(card.variants[0].originalPrice).toFixed(2)}\r\n                    </span>\r\n                  )}\r\n                  <span class=\"final-price\">\r\n                    ₹ {parseFloat(card.variants[0].price).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {index < cards.length - 1 && <div class=\"divider\"></div>}\r\n          </div>\r\n        ))}\r\n        <div class=\"bundle-total\">\r\n          <span>Total ({cards.length})</span>\r\n          <span>\r\n            ₹{\r\n              cards\r\n                .reduce(\r\n                  (total, item) =>\r\n                    total + parseFloat(item.variants[0]?.price || \"0\"),\r\n                  0\r\n                )\r\n                .toFixed(2)\r\n            }\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderChatMessages() {\r\n    const groupedMessages: JSX.Element[] = [];\r\n    let currentGroup: JSX.Element[] = [];\r\n    let isGrouping = false;\r\n\r\n    this.chatMessages.forEach((conversation, convIndex) => {\r\n      const { messageType, photoSearchImage, messages } = conversation;\r\n\r\n      messages.forEach((msg, msgIndex) => {\r\n        if (msg.type === \"unknown\") {\r\n          if (msg.content && msg.content.type === \"bundle\" && msg.content.cards) {\r\n            groupedMessages.push(\r\n              <div\r\n                class=\"chat-message unknown\"\r\n                key={`unknown-${convIndex}-${msgIndex}`}\r\n              >\r\n                <div class=\"message-content\">\r\n                  {this.renderBundleMessages(msg.content.cards)}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        } else if (msg.type === \"card\") {\r\n          if (!isGrouping) {\r\n            isGrouping = true;\r\n            currentGroup = [];\r\n          }\r\n          const cards = msg.type === \"card\" ? [msg.content] : msg.content.cards;\r\n          cards.forEach((card, cardIndex) => {\r\n            currentGroup.push(\r\n              <div\r\n                class=\"chat-card\"\r\n                key={`card-${convIndex}-${msgIndex}-${cardIndex}`}\r\n              >\r\n                <h4>\r\n                  {card.title?.text || card.title || \"Untitled Product\"}\r\n                </h4>\r\n                <img\r\n                  src={card.imageUrl || \"\"}\r\n                  alt={card.title?.text || \"Image\"}\r\n                />\r\n                <a\r\n                  href={card.url || \"#\"}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  View Product\r\n                </a>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (msg.content?.type === \"bundle\") {\r\n          groupedMessages.push(\r\n            <div class=\"chat-bundle\" key={`bundle-${convIndex}-${msgIndex}`}>\r\n              {this.renderBundleMessages(msg.cards || [])}\r\n            </div>\r\n          );\r\n        } else if (messageType === \"photo-search\" && msg.type === \"text\") {\r\n        } else {\r\n          if (isGrouping) {\r\n            groupedMessages.push(\r\n              <div class=\"chat-card-group\" key={`group-${groupedMessages.length}`}>\r\n                {currentGroup}\r\n              </div>\r\n            );\r\n            isGrouping = false;\r\n          }\r\n          if (msg.type === \"text\") {\r\n            groupedMessages.push(\r\n              <div\r\n                class={`chat-message ${msg.isAIReply ? \"ai\" : \"user\"}`}\r\n                key={`text-${convIndex}-${msgIndex}`}\r\n              >\r\n                {msg.content}\r\n              </div>\r\n            );\r\n          } else if (msg.type === \"image\") {\r\n            groupedMessages.push(\r\n              <div\r\n                class=\"chat-message image\"\r\n                key={`image-${convIndex}-${msgIndex}`}\r\n              >\r\n                <img src={msg.content} alt=\"Image message\" />\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      if (messageType === \"photo-search\" && photoSearchImage) {\r\n        groupedMessages.push(\r\n          <div\r\n            class=\"chat-message photo-search\"\r\n            key={`photo-search-${convIndex}`}\r\n          >\r\n            <img src={photoSearchImage} alt=\"Photo search result\" />\r\n          </div>\r\n        );\r\n\r\n        const textMessage = messages.find((msg) => msg.type === \"text\");\r\n        if (textMessage) {\r\n          groupedMessages.push(\r\n            <div\r\n              class={`chat-message ${textMessage.isAIReply ? \"ai\" : \"user\"}`}\r\n              key={`photo-search-text-${convIndex}`}\r\n            >\r\n              {textMessage.content}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    if (isGrouping) {\r\n      groupedMessages.push(\r\n        <div class=\"chat-card-group\" key={`group-${groupedMessages.length}`}>\r\n          {currentGroup}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return groupedMessages;\r\n  }\r\n} \r\n"],"version":3}