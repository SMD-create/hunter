{"file":"my-component.entry.esm.js","mappings":";;AAAA,MAAM,cAAc,GAAG,4sEAA4sE;;ACGnuE,YACE,GAAG,EAAC,YAAY,EAChB,IAAI,EAAC,8DAA8D,GACnE,CAAA;MAmBW,WAAW;;;4BACkB,EAAE;yBACZ,IAAI;4BACK,IAAI;;IAE3C,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,8EAA8E,CAC/E,CAAC;YAEF,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;aACrC;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,GAAG,+BAA+B,CAAC;aACrD;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,+BAA+B,CAAC;SACrD;gBAAS;YACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;KACF;IAED,MAAM;QACJ,QACE,4DAAK,KAAK,EAAC,gBAAgB,IACzB,4DAAK,KAAK,EAAC,aAAa,eAAe,EAEvC,4DAAK,KAAK,EAAC,eAAe,IACvB,IAAI,CAAC,SAAS,IACb,WAAK,KAAK,EAAC,SAAS,0BAA0B,IAC5C,IAAI,CAAC,YAAY,IACnB,WAAK,KAAK,EAAC,OAAO,IAAE,IAAI,CAAC,YAAY,CAAO,KAE5C,IAAI,CAAC,kBAAkB,EAAE,CAC1B,CACG,EACN,+DAAQ,GAAG,EAAC,6DAA6D,GAAU,CAC/E,EACN;KACH;IAEO,kBAAkB;QACxB,MAAM,aAAa,GAAkB,EAAE,CAAC;QACxC,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,KAAK,GAAkB,EAAE,CAAC;QAE9B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,SAAS;;YAEhD,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;YAEjE,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,QAAQ;gBAC7B,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,EAAE;oBACvB,IAAI,CAAC,UAAU,EAAE;;wBAEf,UAAU,GAAG,IAAI,CAAC;wBAClB,KAAK,GAAG,EAAE,CAAC;qBACZ;oBAED,KAAK,CAAC,IAAI,CACR,WAAK,KAAK,EAAC,WAAW,EAAC,GAAG,EAAE,QAAQ,SAAS,IAAI,QAAQ,EAAE,IACzD,cAAK,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAM,EACjC,WACE,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ,EACzB,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAC3B,EACF,SACE,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,UAAU,EAC5B,MAAM,EAAC,QAAQ,EACf,GAAG,EAAC,qBAAqB,mBAGvB,CACA,CACP,CAAC;iBACH;qBAAM,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;oBACtD,IAAI,UAAU,EAAE;;wBAEd,aAAa,CAAC,IAAI,CAChB,WAAK,KAAK,EAAC,wBAAwB,EAAC,GAAG,EAAE,SAAS,aAAa,CAAC,MAAM,EAAE,IACrE,KAAK,CACF,CACP,CAAC;wBACF,UAAU,GAAG,KAAK,CAAC;qBACpB;oBAED,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,EAAE;wBACvB,aAAa,CAAC,IAAI,CAChB,WACE,KAAK,EAAE,gBAAgB,GAAG,CAAC,SAAS,GAAG,IAAI,GAAG,MAAM,EAAE,EACtD,GAAG,EAAE,QAAQ,SAAS,IAAI,QAAQ,EAAE,IAEnC,GAAG,CAAC,OAAO,CACR,CACP,CAAC;qBACH;yBAAM,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;wBAC/B,aAAa,CAAC,IAAI,CAChB,WAAK,KAAK,EAAC,cAAc,EAAC,GAAG,EAAE,SAAS,SAAS,IAAI,QAAQ,EAAE,IAC7D,WAAK,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,EAAC,eAAe,GAAG,CACzC,CACP,CAAC;qBACH;iBACF;aACF,CAAC,CAAC;;YAGH,IAAI,WAAW,KAAK,cAAc,IAAI,gBAAgB,EAAE;gBACtD,aAAa,CAAC,IAAI,CAChB,WAAK,KAAK,EAAC,2BAA2B,EAAC,GAAG,EAAE,gBAAgB,SAAS,EAAE,IACrE,WAAK,GAAG,EAAE,gBAAgB,EAAE,GAAG,EAAC,qBAAqB,GAAG,CACpD,CACP,CAAC;aACH;;YAGD,IAAI,UAAU,EAAE;gBACd,aAAa,CAAC,IAAI,CAChB,WAAK,KAAK,EAAC,wBAAwB,EAAC,GAAG,EAAE,SAAS,aAAa,CAAC,MAAM,EAAE,IACrE,KAAK,CACF,CACP,CAAC;aACH;SACF,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC;KACtB;;;;;;","names":[],"sources":["src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":[":host {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Helvetica Neue', Arial, sans-serif;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  margin: 0;\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n  max-width: 900px;\r\n  height: 80%;\r\n  max-height: 620px;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.chat-header {\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  color: white;\r\n  text-align: center;\r\n  padding: 15px;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n}\r\n\r\n.chat-messages {\r\n  flex: 1;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n  background-color: #f9f9f9;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.chat-message {\r\n  padding: 15px;\r\n  border-radius: 12px;\r\n  max-width: 80%;\r\n  position: relative;\r\n  font-size: 1em;\r\n  line-height: 1.4;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chat-message.ai {\r\n  background-color: #e1f5fe;\r\n  align-self: flex-start;\r\n  border: 1px solid #b3e5fc;\r\n}\r\n\r\n.chat-message.user {\r\n  background-color: #d1e7dd;\r\n  align-self: flex-end;\r\n  border: 1px solid #a3d5c3;\r\n}\r\n\r\n/* Chat card group container with horizontal scrolling */\r\n/* Ensure the chat-card-group maintains its height */\r\n.chat-card-group {\r\n  display: flex;\r\n  flex-direction: row; /* Horizontal alignment */\r\n  overflow-x: auto; \r\n  overflow-y: hidden; /* Horizontal scrolling */\r\n  gap: 15px; /* Spacing between cards */\r\n  padding: 10px;\r\n  background-color: #ffffff;\r\n  border: 1px solid #ddd;\r\n  min-height: 380px; /* Ensure it doesn't shrink smaller than the card height */\r\n  max-height: 380px; /* Prevent it from expanding beyond the card height */\r\n  box-sizing: border-box;\r\n}\r\n\r\n\r\n/* Custom scrollbar for horizontal scrolling */\r\n.chat-card-group::-webkit-scrollbar {\r\n  height: 8px;\r\n}\r\n\r\n.chat-card-group::-webkit-scrollbar-thumb {\r\n  background-color: #007bff;\r\n  border-radius: 4px;\r\n}\r\n\r\n.chat-card {\r\n  width: 345px;  /* Fixed width for product cards */\r\n  height: 350px; /* Fixed height for product cards */\r\n  min-width: 250px;  /* Set minimum width */\r\n  min-height: 300px; /* Set minimum height *//* Set fixed height for product cards */\r\n  border-radius: 8px;\r\n  background-color: #ffffff;\r\n  border: 1px solid #e0e0e0;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.chat-card:hover {\r\n  transform: translateY(-5px); /* Lift card on hover */\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.chat-card img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 6px;\r\n  margin: 5px 0;\r\n  object-fit: contain;\r\n}\r\n\r\n.chat-card h4 {\r\n  margin: 5px 0;\r\n  font-size: 0.9em;\r\n  font-weight: 600;\r\n  color: #333;\r\n  text-align: center;\r\n}\r\n\r\n.chat-card a {\r\n  margin-top: 5px;\r\n  padding: 6px 12px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border-radius: 6px;\r\n  text-decoration: none;\r\n  font-size: 0.9em;\r\n  font-weight: bold;\r\n}\r\n\r\n.chat-card a:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.chat-message.photo-search {\r\n  display: flex;\r\n  justify-content: center; /* Center the image horizontally */\r\n  align-items: center;     /* Center the image vertically */\r\n  padding: 10px;          /* Add padding if needed */\r\n  align-self: flex-end;   /* Align to the user's side */\r\n}\r\n\r\n\r\n.chat-message.photo-search img {\r\n  width: 300px;            /* Set a fixed width */\r\n  height: auto;            /* Maintain aspect ratio */\r\n  border-radius: 8px;      /* Add rounding if desired */\r\n  object-fit: cover;       /* Cover the area while maintaining aspect ratio */\r\n}\r\n","import { Component, JSX, State, h } from \"@stencil/core\";\r\nimport Swiper from \"swiper\";\r\n\r\n<link\r\n  rel=\"stylesheet\"\r\n  href=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css\"\r\n/>\r\n\r\ninterface ChatMessage {\r\n  type: string; // 'text', 'card', 'image', 'photo-search', etc.\r\n  content: any; // Can be string for text or an object for cards or photo-search\r\n  isAIReply?: boolean; // Optional property to indicate if the message is from AI\r\n}\r\n\r\ninterface Conversation {\r\n  messageType: string; // e.g., 'photo-search'\r\n  photoSearchImage?: string; // Optional property for photo search images\r\n  messages: ChatMessage[]; // Array of messages related to the conversation\r\n}\r\n\r\n@Component({\r\n  tag: \"my-component\",\r\n  styleUrl: \"my-component.css\",\r\n  shadow: true,\r\n})\r\nexport class MyComponent {\r\n  @State() chatMessages: Conversation[] = []; // Change the type to Conversation[]\r\n  @State() isLoading: boolean = true; // Loading state\r\n  @State() errorMessage: string | null = null; // Error state\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://timmy-io-smd-create-smd-creates-projects.vercel.app/api/conversation\"\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        this.chatMessages = data.chat || []; // Safeguard in case `chat` is undefined\r\n      } else {\r\n        console.error(\"Error fetching chat messages\");\r\n        this.errorMessage = \"Failed to load chat messages.\";\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      this.errorMessage = \"Error fetching chat messages.\";\r\n    } finally {\r\n      this.isLoading = false; // End loading state\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"chat-container\">\r\n        <div class=\"chat-header\">Timmy AI</div>\r\n\r\n        <div class=\"chat-messages\">\r\n          {this.isLoading ? (\r\n            <div class=\"loading\">Loading messages...</div>\r\n          ) : this.errorMessage ? (\r\n            <div class=\"error\">{this.errorMessage}</div>\r\n          ) : (\r\n            this.renderChatMessages()\r\n          )}\r\n        </div>\r\n        <script src=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js\"></script>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderChatMessages() {\r\n    const messageGroups: JSX.Element[] = [];\r\n    let isGrouping = false;\r\n    let group: JSX.Element[] = [];\r\n\r\n    this.chatMessages.forEach((conversation, convIndex) => {\r\n      // Each conversation has a messageType (e.g., 'photo-search') and a nested messages array\r\n      const { messageType, photoSearchImage, messages } = conversation;\r\n\r\n      messages.forEach((msg, msgIndex) => {\r\n        if (msg.type === \"card\") {\r\n          if (!isGrouping) {\r\n            // Start grouping if the first card is encountered\r\n            isGrouping = true;\r\n            group = [];\r\n          }\r\n\r\n          group.push(\r\n            <div class=\"chat-card\" key={`card-${convIndex}-${msgIndex}`}>\r\n              <h4>{msg.content.title.text}</h4>\r\n              <img\r\n                src={msg.content.imageUrl}\r\n                alt={msg.content.title.text}\r\n              />\r\n              <a\r\n                href={msg.content.productUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                View Product\r\n              </a>\r\n            </div>\r\n          );\r\n        } else if (msg.type === \"text\" || msg.type === \"image\") {\r\n          if (isGrouping) {\r\n            // Stop grouping if a non-card message is encountered\r\n            messageGroups.push(\r\n              <div class=\"chat-card-group swiper\" key={`group-${messageGroups.length}`}>\r\n                {group}\r\n              </div>\r\n            );\r\n            isGrouping = false; // Reset grouping status\r\n          }\r\n\r\n          if (msg.type === \"text\") {\r\n            messageGroups.push(\r\n              <div\r\n                class={`chat-message ${msg.isAIReply ? \"ai\" : \"user\"}`}\r\n                key={`text-${convIndex}-${msgIndex}`}\r\n              >\r\n                {msg.content}\r\n              </div>\r\n            );\r\n          } else if (msg.type === \"image\") {\r\n            messageGroups.push(\r\n              <div class=\"chat-message\" key={`image-${convIndex}-${msgIndex}`}>\r\n                <img src={msg.content} alt=\"Image message\" />\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      // Render photo search image if available\r\n      if (messageType === \"photo-search\" && photoSearchImage) {\r\n        messageGroups.push(\r\n          <div class=\"chat-message photo-search\" key={`photo-search-${convIndex}`}>\r\n            <img src={photoSearchImage} alt=\"Photo search result\" />\r\n          </div>\r\n        );\r\n      }\r\n\r\n      // Add any remaining grouped cards if the loop ended while still grouping\r\n      if (isGrouping) {\r\n        messageGroups.push(\r\n          <div class=\"chat-card-group swiper\" key={`group-${messageGroups.length}`}>\r\n            {group}\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n    return messageGroups;\r\n  }\r\n}\r\n"],"version":3}