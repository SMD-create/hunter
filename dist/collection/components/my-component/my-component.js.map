{"version":3,"file":"my-component.js","sourceRoot":"","sources":["../../../src/components/my-component/my-component.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, JSX, State, h } from \"@stencil/core\";\r\n\r\ninterface ChatMessage {\r\n  type: string; // 'text', 'card', 'image', 'photo-search', 'unknown', etc.\r\n  content: any; // Varies based on the type\r\n  isAIReply?: boolean;\r\n}\r\n\r\ninterface Conversation {\r\n  messageType: string; // e.g., 'photo-search'\r\n  photoSearchImage?: string; // Optional property for photo search images\r\n  messages: ChatMessage[]; // Messages for this conversation\r\n}\r\n\r\n@Component({\r\n  tag: \"my-component\",\r\n  styleUrl: \"my-component.css\",\r\n  shadow: true,\r\n})\r\nexport class MyComponent {\r\n  @State() chatMessages: Conversation[] = [];\r\n  @State() isLoading: boolean = true;\r\n  @State() errorMessage: string | null = null;\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://timmy-io-smd-create-smd-creates-projects.vercel.app/api/conversation\"\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        this.chatMessages = data.chat || [];\r\n      } else {\r\n        this.errorMessage = \"Failed to load chat messages.\";\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = \"Error fetching chat messages.\";\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"chat-container\">\r\n        <div class=\"chat-header\">Timmy AI</div>\r\n        <div class=\"chat-messages\">\r\n          {this.isLoading ? (\r\n            <div class=\"loading\">Loading messages...</div>\r\n          ) : this.errorMessage ? (\r\n            <div class=\"error\">{this.errorMessage}</div>\r\n          ) : (\r\n            this.renderChatMessages()\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderChatMessages() {\r\n    const messageGroups: JSX.Element[] = [];\r\n    let isGrouping = false;\r\n    let group: JSX.Element[] = [];\r\n\r\n    this.chatMessages.forEach((conversation, convIndex) => {\r\n      const { messageType, photoSearchImage, messages } = conversation;\r\n\r\n      messages.forEach((msg, msgIndex) => {\r\n        if (msg.type === \"card\" || (msg.type === \"unknown\" && msg.content?.cards)) {\r\n          // Handle card-like messages\r\n          if (!isGrouping) {\r\n            isGrouping = true;\r\n            group = [];\r\n          }\r\n\r\n          const cards = msg.type === \"card\" ? [msg.content] : msg.content.cards;\r\n          cards.forEach((card, cardIndex) => {\r\n            group.push(\r\n              <div class=\"chat-card\" key={`card-${convIndex}-${msgIndex}-${cardIndex}`}>\r\n                <h4>{card.title?.text || \"Untitled Card\"}</h4>\r\n                <img src={card.imageUrl || \"\"} alt={card.title?.text || \"Image\"} />\r\n                <a href={card.url || \"#\"} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  View Product\r\n                </a>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (msg.type === \"text\" || msg.type === \"image\" || msg.type === \"unknown\") {\r\n          // Handle text, image, and unknown messages\r\n          if (isGrouping) {\r\n            messageGroups.push(\r\n              <div class=\"chat-card-group\" key={`group-${messageGroups.length}`}>\r\n                {group}\r\n              </div>\r\n            );\r\n            isGrouping = false;\r\n          }\r\n\r\n          if (msg.type === \"text\") {\r\n            messageGroups.push(\r\n              <div\r\n                class={`chat-message ${msg.isAIReply ? \"ai\" : \"user\"}`}\r\n                key={`text-${convIndex}-${msgIndex}`}\r\n              >\r\n                {msg.content}\r\n              </div>\r\n            );\r\n          } else if (msg.type === \"image\") {\r\n            messageGroups.push(\r\n              <div class=\"chat-message image\" key={`image-${convIndex}-${msgIndex}`}>\r\n                <img src={msg.content} alt=\"Image message\" />\r\n              </div>\r\n            );\r\n          } else if (msg.type === \"unknown\") {\r\n            messageGroups.push(\r\n              <div class=\"chat-message unknown\" key={`unknown-${convIndex}-${msgIndex}`}>\r\n                <pre>{JSON.stringify(msg.content, null, 2)}</pre>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      // Handle photo search images\r\n      if (messageType === \"photo-search\" && photoSearchImage) {\r\n        messageGroups.push(\r\n          <div class=\"chat-message photo-search\" key={`photo-search-${convIndex}`}>\r\n            <img src={photoSearchImage} alt=\"Photo search result\" />\r\n          </div>\r\n        );\r\n      }\r\n\r\n      // Add grouped cards if grouping is still active\r\n      if (isGrouping) {\r\n        messageGroups.push(\r\n          <div class=\"chat-card-group\" key={`group-${messageGroups.length}`}>\r\n            {group}\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n    return messageGroups;\r\n  }\r\n}\r\n"]}