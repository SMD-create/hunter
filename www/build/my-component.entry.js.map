{"file":"my-component.entry.esm.js","mappings":"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","names":[],"sources":["src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":[":host {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Helvetica Neue', Arial, sans-serif;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  margin: 0;\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n  max-width: 900px;\r\n  height: 80%;\r\n  max-height: 620px;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.chat-header {\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  color: white;\r\n  text-align: center;\r\n  padding: 15px;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n}\r\n\r\n.chat-messages {\r\n  flex: 1;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n  background-color: #f9f9f9;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.chat-message {\r\n  padding: 15px;\r\n  border-radius: 12px;\r\n  max-width: 80%;\r\n  position: relative;\r\n  font-size: 1em;\r\n  line-height: 1.4;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chat-message.ai {\r\n  background-color: #e1f5fe;\r\n  align-self: flex-start;\r\n  border: 1px solid #b3e5fc;\r\n}\r\n\r\n.chat-message.user {\r\n  background-color: #d1e7dd;\r\n  align-self: flex-end;\r\n  border: 1px solid #a3d5c3;\r\n}\r\n\r\n.chat-message.image img {\r\n  max-width: 100%;\r\n  border-radius: 5px;\r\n}\r\n\r\n.chat-card-group {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n","import { Component, JSX, State, h } from \"@stencil/core\";\r\n\r\ninterface ChatMessage {\r\n  type: \"text\" | \"card\" | \"image\" | \"bundle\" | \"photo-search\" | \"unknown\";\r\n  content: any; // Varies based on type\r\n  isAIReply?: boolean;\r\n  cards?: Array<BundleCard>; // Optional cards property for 'bundle' messages\r\n}\r\n\r\ninterface BundleCard {\r\n  title: {\r\n    type: \"text\";\r\n    text: string;\r\n  };\r\n  purpose: string;\r\n  imageUrl: string;\r\n  variants: Array<{\r\n    title: string;\r\n    price: string;\r\n    originalPrice?: string;\r\n    id: number;\r\n  }>;\r\n}\r\n\r\ninterface Conversation {\r\n  messageType: string; // e.g., 'photo-search'\r\n  photoSearchImage?: string; // Optional for photo search images\r\n  messages: ChatMessage[]; // Messages for this conversation\r\n}\r\n\r\n@Component({\r\n  tag: \"my-component\",\r\n  styleUrl: \"my-component.css\",\r\n  shadow: true,\r\n})\r\nexport class MyComponent {\r\n  @State() chatMessages: Conversation[] = [];\r\n  @State() isLoading: boolean = true;\r\n  @State() errorMessage: string | null = null;\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://timmy-io-smd-create-smd-creates-projects.vercel.app/api/conversation\"\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        this.chatMessages = data.chat || [];\r\n      } else {\r\n        this.errorMessage = \"Failed to load chat messages.\";\r\n      }\r\n    } catch (error) {\r\n      this.errorMessage = \"Error fetching chat messages.\";\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private renderBundleMessages(cards: BundleCard[]) {\r\n    return (\r\n      <div class=\"bundle-container\">\r\n        <h4>Your Bundle</h4>\r\n        {cards.map((card, index) => (\r\n          <div class=\"bundle-item\" key={`bundle-card-${index}`}>\r\n            <div class=\"bundle-content\">\r\n              <img\r\n                src={card.imageUrl}\r\n                alt={card.title.text}\r\n                class=\"bundle-item-image\"\r\n              />\r\n              <div class=\"bundle-item-details\">\r\n                <h5 class=\"bundle-item-title\">{card.title.text}</h5>\r\n                <p class=\"bundle-item-purpose\">\r\n                  {card.purpose || \"No description available.\"}\r\n                </p>\r\n                <span class=\"bundle-item-price\">\r\n                  Rs. {card.variants?.[0]?.price || \"N/A\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {index < cards.length - 1 && <hr class=\"bundle-separator\" />}\r\n          </div>\r\n        ))}\r\n        <div class=\"bundle-total\">\r\n          <strong>Total:</strong>{\" \"}\r\n          Rs.{\" \"}\r\n          {cards.reduce(\r\n            (total, card) =>\r\n              total + parseFloat(card.variants?.[0]?.price || \"0\"),\r\n            0\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderCardMessages(cards: any[]) {\r\n    return cards.map((card, index) => (\r\n      <div class=\"chat-card\" key={`card-${index}`}>\r\n        <h4>{card.title?.text || \"Untitled Card\"}</h4>\r\n        <img\r\n          src={card.imageUrl || \"\"}\r\n          alt={card.title?.text || \"Image\"}\r\n          class=\"card-image\"\r\n        />\r\n        {card.url && (\r\n          <a\r\n            href={card.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            class=\"card-link\"\r\n          >\r\n            View Product\r\n          </a>\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  private renderTextMessage(msg: ChatMessage, key: string) {\r\n    return (\r\n      <div\r\n        class={`chat-message ${msg.isAIReply ? \"ai\" : \"user\"}`}\r\n        key={key}\r\n      >\r\n        {msg.content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderImageMessage(msg: ChatMessage, key: string) {\r\n    return (\r\n      <div\r\n        class={`chat-message image ${msg.isAIReply ? \"ai\" : \"user\"}`}\r\n        key={key}\r\n      >\r\n        <img src={msg.content} alt=\"Image message\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderUnknownMessage(msg: ChatMessage, key: string) {\r\n    if (msg.content?.type === \"bundle\") {\r\n      return (\r\n        <div class=\"chat-bundle\" key={key}>\r\n          {this.renderBundleMessages(msg.content.cards || [])}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div class=\"chat-message unknown\" key={key}>\r\n        <pre>{JSON.stringify(msg.content, null, 2)}</pre>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderChatMessages() {\r\n    return this.chatMessages.map((conversation, convIndex) => (\r\n      <div class=\"conversation\" key={`conv-${convIndex}`}>\r\n        {conversation.messages.map((msg, msgIndex) => {\r\n          const key = `msg-${convIndex}-${msgIndex}`;\r\n          switch (msg.type) {\r\n            case \"text\":\r\n              return this.renderTextMessage(msg, key);\r\n            case \"image\":\r\n              return this.renderImageMessage(msg, key);\r\n            case \"card\":\r\n              return (\r\n                <div class=\"chat-card-group\">{this.renderCardMessages([msg.content])}</div>\r\n              );\r\n            case \"bundle\":\r\n              return (\r\n                <div class=\"chat-bundle\" key={key}>\r\n                  {this.renderBundleMessages(msg.cards || [])}\r\n                </div>\r\n              );\r\n            case \"unknown\":\r\n              return this.renderUnknownMessage(msg, key);\r\n            default:\r\n              return (\r\n                <div class=\"chat-message unhandled\" key={key}>\r\n                  Unhandled message type: {msg.type}\r\n                </div>\r\n              );\r\n          }\r\n        })}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"chat-container\">\r\n        <div class=\"chat-header\">Timmy AI</div>\r\n        <div class=\"chat-messages\">\r\n          {this.isLoading ? (\r\n            <div class=\"loading\">Loading messages...</div>\r\n          ) : this.errorMessage ? (\r\n            <div class=\"error\">{this.errorMessage}</div>\r\n          ) : (\r\n            this.renderChatMessages()\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}