{"version":3,"names":["myComponentCss","MyComponentStyle0","MyComponent","componentWillLoad","response","fetch","ok","data","json","this","chatMessages","chat","console","error","errorMessage","isLoading","render","h","key","class","map","msg","index","type","isAIReply","content","title","text","src","imageUrl","alt","href","productUrl","target","rel"],"sources":["src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":[":host {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Helvetica Neue', Arial, sans-serif;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  margin: 0;\r\n  background-color: #f0f2f5; /* Softer background color */\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 900px; /* Slightly increased width */\r\n  height: 620px; /* Slightly increased height */\r\n  background-color: #ffffff;\r\n  border-radius: 15px; /* More rounded corners */\r\n  overflow: hidden;\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15); /* More pronounced shadow */\r\n}\r\n\r\n.chat-header {\r\n  background: linear-gradient(45deg, #007bff, #0056b3); /* Gradient header for a professional look */\r\n  color: white;\r\n  text-align: center;\r\n  padding: 15px;\r\n  font-size: 1.5em; /* Larger font for emphasis */\r\n  font-weight: bold;\r\n}\r\n\r\n.chat-messages {\r\n  flex: 1;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n  background-color: #f9f9f9;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px; /* Consistent spacing between messages */\r\n}\r\n\r\n.chat-message {\r\n  padding: 15px;\r\n  border-radius: 12px;\r\n  max-width: 80%; /* Slightly increased width for better balance */\r\n  position: relative;\r\n  font-size: 1em;\r\n  line-height: 1.4;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1); /* Add subtle shadow to messages */\r\n}\r\n\r\n.chat-message.ai {\r\n  background-color: #e1f5fe;\r\n  align-self: flex-start; /* Align AI messages to the left */\r\n  border: 1px solid #b3e5fc;\r\n}\r\n\r\n.chat-message.user {\r\n  background-color: #d1e7dd;\r\n  align-self: flex-end; /* Align user messages to the right */\r\n  border: 1px solid #a3d5c3;\r\n}\r\n\r\n/* Styles for card messages */\r\n.chat-card {\r\n  padding: 15px;\r\n  border-radius: 12px;\r\n  background-color: #ffffff;\r\n  border: 1px solid #e0e0e0;\r\n  width: 100%; /* Full width to stack vertically */\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05); /* Subtle shadow for depth */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: transform 0.3s, box-shadow 0.3s; /* Add smooth transition */\r\n}\r\n\r\n.chat-card:hover {\r\n  transform: translateY(-5px); /* Lift card slightly on hover */\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.chat-card img {\r\n  max-width: 100%;\r\n  border-radius: 10px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.chat-card h4 {\r\n  margin: 10px 0;\r\n  font-size: 1.2em;\r\n  font-weight: 600;\r\n  color: #333; /* Darker color for better readability */\r\n}\r\n\r\n.chat-card a {\r\n  margin-top: 10px;\r\n  padding: 8px 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.chat-card a:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.chat-input-container {\r\n  display: flex;\r\n  border-top: 1px solid #ddd;\r\n  padding: 15px;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.chat-input {\r\n  flex: 1;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  font-size: 1em;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.chat-input:focus {\r\n  border-color: #007bff; /* Highlight border on focus */\r\n  outline: none;\r\n}\r\n\r\n.send-button {\r\n  margin-left: 10px;\r\n  padding: 12px 24px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s, transform 0.3s;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: #0056b3;\r\n  transform: translateY(-2px); /* Lift button slightly on hover */\r\n}\r\n","// my-component.tsx\r\nimport { Component, State, h } from '@stencil/core';\r\n\r\n\r\ninterface ChatMessage {\r\n  type: string; // 'text', 'card', 'image', etc.\r\n  content: any; // Can be string for text or an object for cards\r\n  isAIReply?: boolean; // Optional property to indicate if the message is from AI\r\n}\r\n\r\n@Component({\r\n  tag: 'my-component',\r\n  styleUrl: 'my-component.css',\r\n  shadow: true,\r\n})\r\nexport class MyComponent {\r\n  @State() chatMessages: ChatMessage[] = [];\r\n  @State() isLoading: boolean = true; // Loading state\r\n  @State() errorMessage: string | null = null; // Error state\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/conversation'); // Fetch from local backend\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        this.chatMessages = data.chat || []; // Safeguard in case `chat` is undefined\r\n      } else {\r\n        console.error('Error fetching chat messages');\r\n        this.errorMessage = 'Failed to load chat messages.';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      this.errorMessage = 'Error fetching chat messages.';\r\n    } finally {\r\n      this.isLoading = false; // End loading state\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"chat-container\">\r\n        <div class=\"chat-header\">Timmy AI</div>\r\n\r\n        <div class=\"chat-messages\">\r\n          {this.isLoading ? (\r\n            <div class=\"loading\">Loading messages...</div>\r\n          ) : this.errorMessage ? (\r\n            <div class=\"error\">{this.errorMessage}</div>\r\n          ) : (\r\n            this.chatMessages.map((msg, index) => {\r\n              if (msg.type === 'text') {\r\n                return (\r\n                  <div class={`chat-message ${msg.isAIReply ? 'ai' : 'user'}`} key={index}>\r\n                    {msg.content}\r\n                  </div>\r\n                );\r\n              } else if (msg.type === 'card') {\r\n                return (\r\n                  <div class=\"chat-card\" key={index}>\r\n                    <h4>{msg.content.title.text}</h4> {/* Ensure correct structure */}\r\n                    <img src={msg.content.imageUrl} alt={msg.content.title} />\r\n                    <a href={msg.content.productUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      View Product\r\n                    </a>\r\n                  </div>\r\n                );\r\n              } else if (msg.type === 'image') {\r\n                return (\r\n                  <div class=\"chat-message\" key={index}>\r\n                    <img src={msg.content} alt=\"Image message\" />\r\n                  </div>\r\n                );\r\n              }\r\n              return null; // In case of unrecognized message type\r\n            })\r\n          )}\r\n        </div>\r\n\r\n        {/* Optional input area for future chat interactions */}\r\n        {/*<div class=\"chat-input-container\">\r\n          <input type=\"text\" class=\"chat-input\" placeholder=\"Type your message...\" />\r\n          <button class=\"send-button\">Send</button>\r\n        </div>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"2CAAA,MAAMA,EAAiB,kqEACvB,MAAAC,EAAeD,E,MCcFE,EAAW,M,2CACiB,G,eACT,K,kBACS,I,CAEvC,uBAAMC,GACJ,IACE,MAAMC,QAAiBC,MAAM,0CAC7B,GAAID,EAASE,GAAI,CACf,MAAMC,QAAaH,EAASI,OAC5BC,KAAKC,aAAeH,EAAKI,MAAQ,E,KAC5B,CACLC,QAAQC,MAAM,gCACdJ,KAAKK,aAAe,+B,EAEtB,MAAOD,GACPD,QAAQC,MAAM,SAAUA,GACxBJ,KAAKK,aAAe,+B,SAEpBL,KAAKM,UAAY,K,EAIrB,MAAAC,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,kBACTF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,eAAa,YAExBF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,iBACRV,KAAKM,UACJE,EAAA,OAAKE,MAAM,WAAS,uBAClBV,KAAKK,aACPG,EAAA,OAAKE,MAAM,SAASV,KAAKK,cAEzBL,KAAKC,aAAaU,KAAI,CAACC,EAAKC,KAC1B,GAAID,EAAIE,OAAS,OAAQ,CACvB,OACEN,EAAA,OAAKE,MAAO,gBAAgBE,EAAIG,UAAY,KAAO,SAAUN,IAAKI,GAC/DD,EAAII,Q,MAGJ,GAAIJ,EAAIE,OAAS,OAAQ,CAC9B,OACEN,EAAA,OAAKE,MAAM,YAAYD,IAAKI,GAC1BL,EAAA,UAAKI,EAAII,QAAQC,MAAMC,MAAU,IACjCV,EAAA,OAAKW,IAAKP,EAAII,QAAQI,SAAUC,IAAKT,EAAII,QAAQC,QACjDT,EAAA,KAAGc,KAAMV,EAAII,QAAQO,WAAYC,OAAO,SAASC,IAAI,uBAAqB,gB,MAKzE,GAAIb,EAAIE,OAAS,QAAS,CAC/B,OACEN,EAAA,OAAKE,MAAM,eAAeD,IAAKI,GAC7BL,EAAA,OAAKW,IAAKP,EAAII,QAASK,IAAI,kB,CAIjC,OAAO,IAAI,K","ignoreList":[]}